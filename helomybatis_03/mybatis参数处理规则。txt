单个参数：mybatis不会做特殊处理，
    #{参数名}：取出参数值

多个参数：
    操作：
        方法： public Employee getEmpByIdAndLastName(Integer id,String lastName);
        取值：#{id},#{lastName}
    异常：org.apache.ibatis.binding.BindingException:
     Parameter 'id' not found.
    Available parameters are [arg1, arg0, param1, param2]

    原因:多个参数时，mybatis会做特殊处理
            多个参数会被封装成一个map
                key: param1...paramN，或者参数的索引也可以（看起来不见名知意）
                value:传入的参数值
                #{}就是从map中获取指定的key值

命名参数：明确指定封装参数时map的key;
        通过@Param注解
        @Param("id")Integer id
        多个参数会被封装成一个map
        key:使用@Param注解指定的值
        value：参数值
      #{指定的key}取出对应的参数值

        1.8之后可以通过全局配置：useActualParamName:name=参数名

    POJO：
    如果多个参数正好是我们业务逻辑的数据模型，我们就可以直接传入pojo
        #{属性名}：取出传入的pojo的属性值
    Map:
    如果多个参数不是业务模型中的数据，没有对应的pojo，不经常使用为了方便，我们也可以传入map
        #{key}:取出map中对应的值
    TO:
    如果多个参数不是业务模型中的数据，但是要经常使用，推荐编写一个TO(Transfer Object)数据传输对象
        Page{
            int index;
            int size;
        }

==============================参数值的获取===========================
#{}：可以获取map中的值或者pojo对象属性的值；
${}：可以获取map中的值或者pojo对象属性的值；
        区别：
            #{}：是以预编译的形式，将参数设置到sql语句中；防止sql注入
            ${}：取出的值直接拼装在sql语句中；会有安全问题
            大多情况下，我们取参数的值都应该去使用#{}；
                少数特殊情况使用${}比较合适(比如原生jdbc不支持占位符的地方，我们就可以使用${}进行取值)
                    比如排序、分表：按照年份分表拆分
                        select * from ${year}_salary where xxxx;
                                                            (字段名) （顺序desc、asc）
                        select * from tbl_employee order by ${f_name} ${order}
        #{}：更丰富的用法：
            规定参数的一些规则：
                javaType、jdbcType、mode(存储过程)、numericScale（数字类型，保留几位小数）、
                resultMap（结果类型，结果集）、typeHandler（处理数据的类型处理器）、jdbcTypeName、expression

                jdbcType通常需要在某种特定的条件下被设置：
                    在我们数据为null的时候，有些数据库可能不能识别mybatis对null的默认处理。比如Oracle(报错)
                    jdbcType OTHER:无效的类型；因为mybatis对所有的null都映射的jdbc OTHER类型 oracle不能处理
                        由于全局配置中：jdbcTypeForNull=OTHER;oracle不支持
           两种解决办法 1、#{email,jdbcType=OTHER}
                        2、jdbcTypeForNull=NULL