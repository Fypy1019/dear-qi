<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aynu.helomybatis_03.dao.EmployeeMapperPlus">
    
    <!--自定义某个javaBean的封装规则
        type:自定义规则的java类型
        id:唯一id方便引用
    -->
    <resultMap id="MyEmp" type="com.aynu.helomybatis_03.pojo.Employee">
        <!--指定主键列的封装规则
            id定义主键底层会有优化
            column:指定哪一列
            property:制定对应javaBean的哪一个属性
        -->
        <id column="id" property="id"/>
        <!--定义普通列封装规则-->
        <result column="last_name" property="lastName"/>
        <!--其他不指定的列会自动封装：（虽然可以自动封装，但是最好我们只要写resultMap就把全部的映射规则都写上）-->
        <result column="email" property="email"/>
        <result column="gender" property="gender"/>
        <!--此时驼峰命名开启与否已经没有关系了lastName属性都可以正常封装-->
    </resultMap>
    
    <!--public Employee getEmpById(Integer id);-->
    <select id="getEmpById"  resultMap="MyEmp">
        SELECT * FROM tbl_employee
        WHERE id=#{id}
    </select>

    <!--场景一：
        查询Employee的同时查询员工对应的部门
        Employee=====>Department(部门信息)
        一个员工有与之对应的部门信息：
    -->

    <!--public Employee getEmpAndDept(Integer id);-->
    <select id="getEmpAndDept">

    </select>
</mapper>