<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--1.mybatis可以使用properties来引入外部properties配置文件的内容
        resource:引入类路径下的资源
        url:引入网络路径或者磁盘路径下的资源
    -->

    <properties resource="conf/dbcconfig.properties"></properties>
    
    <!--
        2、settings包含很多重要的设置项
            setting:用来设置每一个设置项
                    name:设置项名
                    value:设置项取值

                    这里是驼峰命名规则
    -->
    <settings>
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--<setting name="mapUnderscoreToCamelCase" value="false"/>-->
        <!--懒加载
            默认true
            显式的指定每个我们需要更改的配置的值，即使他是默认的。防止版本更新带来的问题
            -->
        <setting name="cacheEnabled" value="true"/>
        <setting name="lazyLoadingEnabled" value="true"/>
        <!--侵入（抑制）懒加载-->
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>
    
    <!--  3.typeAliases
          别名处理器，可以为java类型起别名(别名不区分大小写)
    -->
    <typeAliases>
        <!--typeAlias:为某个java类型起别名
            type:指定要起别名类型的全类名；默认别名是类名小写：employee
            alias:指定新的别名
            @Alias注解运用在类名上，为产生别名冲突的类设置新别名
        -->
        <!--<typeAlias tycom.aynu.helomybatis_03s_02.pojo.Employee"/>-->
        <!--<typeAlias tycom.aynu.helomybatis_03s_02.pojo.Employee" alias="emp"/>-->

        <!--package:为某个包下所有类批量起别名
                name:指定包名（为当前包以及下面所有的后代包的每一个类都起一个默认别名（类名小写））
        -->
        <package name="com.aynu.helomybatis_05_cache.pojo"/>
    </typeAliases>

    <!--4.environments:环境们，mybatis可以配置多种环境，default指定使用某种环境，可以达到快速切换环境
            environment:配置一个具体的环境信息；必须有transactionManager和dataSource标签，id代表当前环境唯一标识
            transactionManager：事务管理器；
                type:事务管理器的类型，JDBC|MANAGED（使用J2EE容器的方式进行事务控制）
            dataSource：数据源；
                type:数据源类型；UNPOOLED|POOLED|JNDI
                    UNPOOLED:不使用连接池技术
                    POOLED:使用连接池技术
                    JNDI：JNDI技术
                自定义数据源：实现DataSourceFactory接口
    -->
    <environments default="development">
        <!--default="test"时更改为测试环境-->

        <environment id="test">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <!-- 5.databaseIdProvider：支持多数据库厂商
            type="DB_VENDOR
            作用就是得到数据库厂商的标识，mybatis就能根据厂商标识来执行不同的sql
       -->
    <!--顺序-->
    <databaseIdProvider type="DB_VENDOR">
        <!--为不同的数据库厂商取别名-->
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
        <property name="SQL Server" value="sqlserver"/>
    </databaseIdProvider>
    <mappers>
        <!--
            mapper:注册一个sql映射
                注册配置文件
                resource:引用类路径下的sql映射文件
                url:引用网络路径或者磁盘路径下的sql映射文件
                    file:///var/mappers/AuthorMapper.xml

                注册接口
                class:引用（注册）接口
                        1、有sql映射文件，映射文件必须与接口同名，并且放在与接口同一目录下
                        2、没有sql映射文件，所有的sql都是利用注解写在接口上
                        推荐：比较重要的、复杂的Dao接口应该写sql映射文件
                                不重要的、简单的Dao接口为了开发快速方便可以使用注解。
        -->
        <!--单个注册-->
        <!--<mapper resource="conf/mybatis/mapper/EmployeeMapper.xml"/>-->
        <!--<mapper clacom.aynu.helomybatis_03s_02.dao.EmployeeMapperAnnotation"/>-->
        <!--批量注册-->
        <package name="com.aynu.helomybatis_05_cache.dao"/>
    </mappers>
</configuration>